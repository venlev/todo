var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.801,1,0.801]],["body/components/AppComponent.html",[0,1.317,1,1.394,2,2.145,3,0.745,4,0.595,5,2.056,6,2.056,7,2.056,8,2.056,9,0.595,10,2.056,11,2.056,12,3.13,13,2.519,14,2.666,15,2.666,16,3.835,17,2.666,18,3.456,19,0.595,20,1.187,21,1.604,22,0.595,23,0.076,24,1.115,25,1.354,26,1.354,27,1.756,28,1.115,29,2.665,30,1.115,31,1.115,32,0.745,33,0.463,34,1.354,35,2.666,36,2.145,37,2.056,38,3.13,39,2.056,40,1.187,41,2.056,42,0.915,43,2.056,44,2.056,45,2.056,46,0.043,47,0.056,48,0.043]],["title/modules/AppModule.html",[49,1.448,50,1.185]],["body/modules/AppModule.html",[1,1.562,3,0.698,4,0.558,9,0.558,23,0.077,30,1.77,31,1.045,32,0.698,33,0.434,34,1.27,42,1.454,46,0.041,47,0.054,48,0.041,49,1.551,50,2.295,51,1.551,52,1.27,53,2.867,54,2.867,55,2.867,56,1.927,57,1.927,58,1.927,59,1.927,60,1.927,61,1.454,62,2.555,63,1.927,64,1.551,65,2.499,66,3.313,67,1.927,68,1.551,69,3.313,70,2.499,71,2.499,72,1.927,73,3.313,74,3.313,75,1.551,76,2.499]],["title/injectables/CRUDService.html",[61,0.801,77,1.185]],["body/injectables/CRUDService.html",[3,0.291,4,0.233,9,0.233,14,0.803,19,0.233,20,0.59,21,0.435,22,0.777,23,0.078,24,0.918,25,0.529,26,1.294,27,1.115,28,1.569,30,1.179,31,0.435,32,0.291,33,0.181,36,0.646,40,1.152,46,0.017,47,0.028,48,0.017,61,0.59,77,0.873,78,1.041,79,0.803,80,3.937,81,1.325,82,2.194,83,1.718,84,1.718,85,1.718,86,2.546,87,1.718,88,1.718,89,1.718,90,1.718,91,1.718,92,2.194,93,1.041,94,2.173,95,1.767,96,1.041,97,1.704,98,1.704,99,2.762,100,2.682,101,1.718,102,1.041,103,1.718,104,1.041,105,1.704,106,1.718,107,1.798,108,2.546,109,1.041,110,2.339,111,1.041,112,1.041,113,1.718,114,1.041,115,1.718,116,1.718,117,1.041,118,0.803,119,1.718,120,1.58,121,1.041,122,2.194,123,1.718,124,0.875,125,1.041,126,0.803,127,2.817,128,1.115,129,1.041,130,1.041,131,1.041,132,1.718,133,0.803,134,0.803,135,0.803,136,1.041,137,1.041,138,1.041,139,1.041,140,2.546,141,1.041,142,1.041,143,1.041,144,1.041,145,1.718,146,1.718,147,3.242,148,1.041,149,3.209,150,2.546,151,1.066,152,1.041,153,1.041,154,2.817,155,1.041,156,1.692,157,0.529,158,1.325,159,0.803,160,1.041,161,1.041,162,1.041,163,1.041,164,1.041,165,1.041,166,2.546,167,1.718,168,1.041,169,1.041,170,1.041,171,1.041,172,1.041,173,1.718,174,1.041,175,1.718,176,1.041,177,1.041,178,1.718,179,1.041,180,1.066,181,1.325,182,1.041,183,1.041,184,1.041,185,0.803,186,1.041,187,1.041,188,1.041,189,1.041,190,1.718,191,1.041,192,1.041,193,1.041,194,0.803,195,2.194,196,1.041,197,1.041,198,1.041,199,1.041,200,1.041,201,1.041,202,1.041,203,1.041,204,1.041,205,1.041,206,1.041,207,1.041,208,1.041,209,1.041,210,1.041,211,1.041,212,1.041,213,1.041,214,1.041,215,1.041,216,1.041,217,1.041,218,1.718,219,1.718,220,1.041,221,1.041,222,1.041,223,1.041,224,1.041,225,1.041,226,1.041,227,1.041,228,1.041,229,1.718,230,1.041,231,1.041,232,1.041,233,1.041,234,1.041,235,1.041,236,1.041,237,1.041]],["title/classes/Card.html",[33,0.405,107,0.976]],["body/classes/Card.html",[3,0.745,4,0.595,9,0.595,19,0.595,20,1.187,21,1.604,22,0.98,23,0.075,24,1.446,28,1.759,30,1.115,32,0.745,33,0.463,40,0.915,46,0.043,47,0.056,48,0.043,95,1.949,97,1.354,98,1.354,105,2.062,107,1.604,124,1.394,157,1.949,159,3.13,238,1.654,239,2.056,240,1.654,241,3.456,242,2.145,243,3.456,244,2.665,245,2.145,246,2.665,247,2.665,248,2.665,249,2.665,250,2.665,251,2.056,252,2.056,253,2.665,254,2.056,255,2.056,256,2.056,257,2.665,258,2.665,259,2.665]],["title/classes/Task.html",[33,0.405,124,0.801]],["body/classes/Task.html",[3,0.785,4,0.627,9,0.627,19,0.627,20,1.228,22,0.976,23,0.075,24,1.644,28,1.731,32,0.785,33,0.487,40,1.468,46,0.046,47,0.058,48,0.046,95,1.997,97,1.427,98,1.427,105,2.103,124,1.35,157,2.103,180,1.743,238,1.743,240,1.743,242,2.218,245,2.44,251,2.165,255,2.165,260,2.165,261,3.573,262,3.573,263,2.808,264,2.808,265,2.808,266,2.808,267,2.808]],["title/components/TodolistComponent.html",[0,0.801,42,0.801]],["body/components/TodolistComponent.html",[0,0.708,1,0.328,2,0.991,3,0.266,4,0.213,5,0.735,6,0.735,7,0.735,8,0.735,9,0.213,11,0.735,12,1.859,13,1.496,15,1.232,17,1.232,19,0.357,20,0.549,21,1.123,22,0.649,23,0.077,25,1.047,26,1.047,27,1.364,28,1.406,30,1.215,31,0.399,32,0.266,33,0.166,34,0.485,35,1.232,36,1.496,37,0.735,38,1.859,39,0.735,40,1.193,41,0.735,42,0.828,43,1.59,44,0.735,45,0.735,46,0.016,47,0.026,48,0.016,61,0.828,72,0.735,75,0.592,81,1.232,94,2.07,95,1.047,97,1.364,98,1.364,99,2.07,100,2.24,105,0.485,107,1.527,110,2.07,118,0.735,120,0.991,124,1.059,126,1.232,128,1.764,134,0.735,135,0.735,147,1.232,151,1.914,180,0.991,194,1.859,240,0.592,252,0.735,254,1.232,256,1.232,268,0.735,269,1.597,270,2.061,271,2.061,272,1.597,273,2.061,274,2.061,275,2.061,276,1.597,277,1.597,278,2.411,279,1.597,280,1.597,281,0.954,282,1.597,283,1.597,284,1.597,285,0.954,286,1.597,287,2.684,288,0.954,289,0.954,290,1.597,291,0.954,292,1.597,293,1.597,294,0.954,295,2.684,296,2.684,297,0.954,298,0.954,299,0.954,300,0.954,301,0.735,302,0.954,303,0.954,304,0.954,305,0.954,306,0.954,307,0.954,308,0.954,309,0.954,310,0.954,311,0.954,312,0.954,313,0.954,314,0.954,315,0.954,316,0.954,317,1.597,318,1.597,319,0.954,320,0.954,321,1.597,322,1.597,323,2.684,324,2.684,325,3.084,326,0.954,327,2.061,328,3.084,329,3.084,330,0.954,331,1.597,332,0.954,333,0.954,334,3.235,335,1.597,336,1.597,337,0.954,338,1.597,339,3.567,340,2.061,341,2.061,342,2.061,343,3.65,344,2.061,345,2.904,346,2.904,347,2.684,348,1.597,349,1.597,350,1.597,351,1.597,352,1.597,353,1.597,354,0.954,355,1.597,356,2.061,357,0.954,358,0.954,359,0.954,360,2.061,361,3.084,362,2.411,363,2.061,364,1.597,365,0.954,366,1.597,367,0.954,368,0.954,369,0.954,370,1.597,371,0.954,372,2.904,373,0.954,374,3.084,375,0.954,376,1.597,377,0.954,378,0.954,379,1.597,380,2.061,381,2.684,382,0.954,383,0.954,384,2.411,385,1.597,386,0.954,387,1.597,388,0.954,389,1.597,390,1.597,391,0.954,392,0.954,393,0.954,394,1.597,395,0.954,396,1.597,397,0.954,398,1.597,399,1.597,400,0.954,401,0.954,402,1.597,403,0.954,404,0.954,405,0.954,406,0.954,407,0.954,408,1.597,409,0.954,410,0.954,411,0.954,412,0.954,413,1.597,414,0.954,415,0.954,416,0.954,417,0.954,418,0.954,419,0.954,420,0.954,421,0.954,422,0.954,423,0.954,424,0.954,425,0.954,426,0.954]],["title/coverage.html",[427,2.44]],["body/coverage.html",[0,1.233,1,0.971,9,0.631,10,2.18,22,0.631,23,0.075,33,0.623,42,0.971,46,0.046,47,0.058,48,0.046,61,0.971,77,1.436,79,2.18,107,1.182,124,0.971,128,1.436,151,2.84,239,2.18,260,2.18,268,2.18,427,2.18,428,2.826,429,2.826,430,2.826,431,2.826,432,2.18,433,1.436,434,1.754,435,2.826,436,2.826,437,2.826,438,2.826,439,2.826,440,2.18,441,4.148,442,2.768,443,4.148,444,2.18,445,2.768,446,2.18,447,2.18,448,2.826,449,2.826]],["title/dependencies.html",[52,1.423,450,1.957]],["body/dependencies.html",[23,0.077,31,1.325,46,0.052,47,0.063,48,0.052,52,1.609,67,2.971,68,2.391,75,1.966,133,2.443,301,2.443,451,3.167,452,3.546,453,3.167,454,3.167,455,3.167,456,3.167,457,3.167,458,3.167,459,3.167,460,3.167]],["title/interfaces/entry.html",[433,1.185,434,1.448]],["body/interfaces/entry.html",[3,0.906,4,0.724,9,0.724,19,0.724,20,1.342,21,1.82,22,0.873,23,0.073,24,1.754,32,0.906,46,0.053,47,0.064,48,0.053,157,2.211,245,2.602,432,2.499,433,1.647,434,2.424,461,3.241]],["title/index.html",[19,0.437,462,1.957,463,1.957]],["body/index.html",[0,1.302,4,0.581,13,1.613,23,0.055,27,1.321,40,0.893,46,0.042,47,0.055,48,0.042,64,1.613,128,1.321,185,2.005,452,2.005,464,3.4,465,2.599,466,3.789,467,3.789,468,2.599,469,2.599,470,3.4,471,4.171,472,4.359,473,2.599,474,2.599,475,2.599,476,2.599,477,2.599,478,2.599,479,2.599,480,2.599,481,2.599,482,2.599,483,3.789,484,3.789,485,2.599,486,4.171,487,2.599,488,2.599,489,2.599,490,2.599,491,2.599,492,2.599,493,2.005,494,3.4,495,3.4,496,4.019,497,2.599,498,3.4,499,3.4,500,2.599,501,4.019,502,2.599,503,2.599,504,2.599,505,3.789,506,2.599,507,2.599,508,2.599,509,1.613,510,2.599,511,2.599]],["title/modules.html",[51,1.963]],["body/modules.html",[23,0.068,46,0.058,47,0.068,48,0.058,50,1.822,51,2.226,68,2.226,512,3.586,513,3.586,514,3.586]],["title/overview.html",[509,1.963]],["body/overview.html",[1,1.547,2,1.861,23,0.072,34,1.523,42,1.392,46,0.049,47,0.061,48,0.049,49,2.311,50,2.331,52,1.523,53,2.312,54,2.312,55,2.312,56,2.312,57,2.312,58,2.312,59,2.312,60,2.312,61,1.392,62,2.872,63,2.312,64,1.861,77,1.523,156,3.124,238,1.861,433,1.523,509,1.861,515,3.724]],["title/miscellaneous/variables.html",[516,1.51,517,2.159]],["body/miscellaneous/variables.html",[19,0.679,22,0.951,23,0.076,25,2.072,26,2.072,46,0.05,47,0.061,48,0.05,120,2.332,158,2.346,181,2.898,242,1.888,440,2.346,442,3.284,444,2.346,445,2.346,446,2.898,447,2.898,493,2.898,516,2.346,517,2.346,518,3.757,519,3.041,520,3.041,521,3.041,522,3.041]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CRUDService.html":{},"classes/Card.html":{},"classes/Task.html":{},"components/TodolistComponent.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/entry.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":151,"title":{},"body":{"injectables/CRUDService.html":{},"components/TodolistComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["0.353",{"_index":377,"title":{},"body":{"components/TodolistComponent.html":{}}}],["0.465",{"_index":386,"title":{},"body":{"components/TodolistComponent.html":{}}}],["0.472",{"_index":403,"title":{},"body":{"components/TodolistComponent.html":{}}}],["0/1",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":438,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":431,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":437,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":356,"title":{},"body":{"components/TodolistComponent.html":{}}}],["1",{"_index":156,"title":{},"body":{"injectables/CRUDService.html":{},"overview.html":{}}}],["1.2rem",{"_index":362,"title":{},"body":{"components/TodolistComponent.html":{}}}],["1.3rem",{"_index":419,"title":{},"body":{"components/TodolistComponent.html":{}}}],["1.5rem",{"_index":395,"title":{},"body":{"components/TodolistComponent.html":{}}}],["1.8rem",{"_index":421,"title":{},"body":{"components/TodolistComponent.html":{}}}],["10",{"_index":426,"title":{},"body":{"components/TodolistComponent.html":{}}}],["100",{"_index":347,"title":{},"body":{"components/TodolistComponent.html":{}}}],["10px",{"_index":335,"title":{},"body":{"components/TodolistComponent.html":{}}}],["11.0.4",{"_index":452,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["128",{"_index":402,"title":{},"body":{"components/TodolistComponent.html":{}}}],["15px",{"_index":408,"title":{},"body":{"components/TodolistComponent.html":{}}}],["1px",{"_index":384,"title":{},"body":{"components/TodolistComponent.html":{}}}],["2",{"_index":515,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":353,"title":{},"body":{"components/TodolistComponent.html":{}}}],["204",{"_index":423,"title":{},"body":{"components/TodolistComponent.html":{}}}],["20px",{"_index":372,"title":{},"body":{"components/TodolistComponent.html":{}}}],["255",{"_index":331,"title":{},"body":{"components/TodolistComponent.html":{}}}],["2px",{"_index":387,"title":{},"body":{"components/TodolistComponent.html":{}}}],["39",{"_index":392,"title":{},"body":{"components/TodolistComponent.html":{}}}],["3px",{"_index":374,"title":{},"body":{"components/TodolistComponent.html":{}}}],["50",{"_index":370,"title":{},"body":{"components/TodolistComponent.html":{}}}],["5bc0de",{"_index":418,"title":{},"body":{"components/TodolistComponent.html":{}}}],["5px",{"_index":346,"title":{},"body":{"components/TodolistComponent.html":{}}}],["6.6.0",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":378,"title":{},"body":{"components/TodolistComponent.html":{}}}],["98",{"_index":326,"title":{},"body":{"components/TodolistComponent.html":{}}}],["9999",{"_index":415,"title":{},"body":{"components/TodolistComponent.html":{}}}],["a.id",{"_index":218,"title":{},"body":{"injectables/CRUDService.html":{}}}],["accessors",{"_index":91,"title":{},"body":{"injectables/CRUDService.html":{}}}],["actual_component",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/TodolistComponent.html":{}}}],["add",{"_index":416,"title":{},"body":{"components/TodolistComponent.html":{}}}],["adder",{"_index":411,"title":{},"body":{"components/TodolistComponent.html":{}}}],["addtask",{"_index":82,"title":{},"body":{"injectables/CRUDService.html":{}}}],["addtask(undefined",{"_index":93,"title":{},"body":{"injectables/CRUDService.html":{}}}],["align",{"_index":364,"title":{},"body":{"components/TodolistComponent.html":{}}}],["allentries",{"_index":273,"title":{},"body":{"components/TodolistComponent.html":{}}}],["angular",{"_index":466,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":301,"title":{},"body":{"components/TodolistComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CRUDService.html":{},"components/TodolistComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"components/TodolistComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/TodolistComponent.html":{},"index.html":{}}}],["app.component",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/TodolistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":50,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":487,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":477,"title":{},"body":{"index.html":{}}}],["b",{"_index":217,"title":{},"body":{"injectables/CRUDService.html":{}}}],["b.id",{"_index":219,"title":{},"body":{"injectables/CRUDService.html":{}}}],["background",{"_index":328,"title":{},"body":{"components/TodolistComponent.html":{}}}],["behaviorsubject",{"_index":127,"title":{},"body":{"injectables/CRUDService.html":{}}}],["black",{"_index":397,"title":{},"body":{"components/TodolistComponent.html":{}}}],["block",{"_index":338,"title":{},"body":{"components/TodolistComponent.html":{}}}],["body",{"_index":373,"title":{},"body":{"components/TodolistComponent.html":{}}}],["bolder",{"_index":359,"title":{},"body":{"components/TodolistComponent.html":{}}}],["boolean",{"_index":245,"title":{},"body":{"classes/Card.html":{},"classes/Task.html":{},"interfaces/entry.html":{}}}],["bootstrap",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":343,"title":{},"body":{"components/TodolistComponent.html":{}}}],["bottom",{"_index":413,"title":{},"body":{"components/TodolistComponent.html":{}}}],["box",{"_index":400,"title":{},"body":{"components/TodolistComponent.html":{}}}],["browse",{"_index":514,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":486,"title":{},"body":{"index.html":{}}}],["card",{"_index":107,"title":{"classes/Card.html":{}},"body":{"injectables/CRUDService.html":{},"classes/Card.html":{},"components/TodolistComponent.html":{},"coverage.html":{}}}],["card(c",{"_index":144,"title":{},"body":{"injectables/CRUDService.html":{}}}],["card).tasks.map(task",{"_index":179,"title":{},"body":{"injectables/CRUDService.html":{}}}],["card.id",{"_index":252,"title":{},"body":{"classes/Card.html":{},"components/TodolistComponent.html":{}}}],["card.isdone",{"_index":256,"title":{},"body":{"classes/Card.html":{},"components/TodolistComponent.html":{}}}],["card.tasks.map(task=>new",{"_index":258,"title":{},"body":{"classes/Card.html":{}}}],["card.title",{"_index":254,"title":{},"body":{"classes/Card.html":{},"components/TodolistComponent.html":{}}}],["cardincontext.id",{"_index":177,"title":{},"body":{"injectables/CRUDService.html":{}}}],["cards",{"_index":424,"title":{},"body":{"components/TodolistComponent.html":{}}}],["cards.map(c",{"_index":143,"title":{},"body":{"injectables/CRUDService.html":{}}}],["center",{"_index":365,"title":{},"body":{"components/TodolistComponent.html":{}}}],["change",{"_index":479,"title":{},"body":{"index.html":{}}}],["check",{"_index":508,"title":{},"body":{"index.html":{}}}],["checkbox",{"_index":389,"title":{},"body":{"components/TodolistComponent.html":{}}}],["checkboxstatuschange",{"_index":276,"title":{},"body":{"components/TodolistComponent.html":{}}}],["checkboxstatuschange(element",{"_index":284,"title":{},"body":{"components/TodolistComponent.html":{}}}],["checkifeveryisdone",{"_index":190,"title":{},"body":{"injectables/CRUDService.html":{}}}],["child.id",{"_index":209,"title":{},"body":{"injectables/CRUDService.html":{}}}],["childid",{"_index":108,"title":{},"body":{"injectables/CRUDService.html":{}}}],["class",{"_index":33,"title":{"classes/Card.html":{},"classes/Task.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CRUDService.html":{},"classes/Card.html":{},"classes/Task.html":{},"components/TodolistComponent.html":{},"coverage.html":{}}}],["classes",{"_index":238,"title":{},"body":{"classes/Card.html":{},"classes/Task.html":{},"overview.html":{}}}],["cli",{"_index":467,"title":{},"body":{"index.html":{}}}],["close",{"_index":394,"title":{},"body":{"components/TodolistComponent.html":{}}}],["close:hover",{"_index":404,"title":{},"body":{"components/TodolistComponent.html":{}}}],["cluster_appmodule",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":481,"title":{},"body":{"index.html":{}}}],["color",{"_index":329,"title":{},"body":{"components/TodolistComponent.html":{}}}],["command",{"_index":510,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/TodolistComponent.html":{}},"body":{"components/AppComponent.html":{},"components/TodolistComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/TodolistComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/TodolistComponent.html":{},"overview.html":{}}}],["console.log(data",{"_index":305,"title":{},"body":{"components/TodolistComponent.html":{}}}],["console.log(element",{"_index":313,"title":{},"body":{"components/TodolistComponent.html":{}}}],["const",{"_index":147,"title":{},"body":{"injectables/CRUDService.html":{},"components/TodolistComponent.html":{}}}],["constructor",{"_index":240,"title":{},"body":{"classes/Card.html":{},"classes/Task.html":{},"components/TodolistComponent.html":{}}}],["constructor(card",{"_index":241,"title":{},"body":{"classes/Card.html":{}}}],["constructor(crud",{"_index":281,"title":{},"body":{"components/TodolistComponent.html":{}}}],["constructor(private",{"_index":302,"title":{},"body":{"components/TodolistComponent.html":{}}}],["constructor(task",{"_index":261,"title":{},"body":{"classes/Task.html":{}}}],["container",{"_index":425,"title":{},"body":{"components/TodolistComponent.html":{}}}],["contents",{"_index":122,"title":{},"body":{"injectables/CRUDService.html":{}}}],["context",{"_index":446,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":417,"title":{},"body":{"components/TodolistComponent.html":{}}}],["coverage",{"_index":427,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":83,"title":{},"body":{"injectables/CRUDService.html":{}}}],["create(value",{"_index":101,"title":{},"body":{"injectables/CRUDService.html":{}}}],["createform",{"_index":274,"title":{},"body":{"components/TodolistComponent.html":{}}}],["createtask",{"_index":275,"title":{},"body":{"components/TodolistComponent.html":{}}}],["crud",{"_index":283,"title":{},"body":{"components/TodolistComponent.html":{}}}],["crudservice",{"_index":61,"title":{"injectables/CRUDService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CRUDService.html":{},"components/TodolistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["currentdata",{"_index":195,"title":{},"body":{"injectables/CRUDService.html":{}}}],["currentdata.filter(element",{"_index":205,"title":{},"body":{"injectables/CRUDService.html":{}}}],["currentdata.filter(parents",{"_index":213,"title":{},"body":{"injectables/CRUDService.html":{}}}],["currentdata.find(element",{"_index":197,"title":{},"body":{"injectables/CRUDService.html":{}}}],["d9534f",{"_index":399,"title":{},"body":{"components/TodolistComponent.html":{}}}],["data",{"_index":292,"title":{},"body":{"components/TodolistComponent.html":{}}}],["declarations",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDService.html":{},"components/TodolistComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDService.html":{},"classes/Card.html":{},"classes/Task.html":{},"components/TodolistComponent.html":{}}}],["delete",{"_index":84,"title":{},"body":{"injectables/CRUDService.html":{}}}],["delete(id",{"_index":103,"title":{},"body":{"injectables/CRUDService.html":{}}}],["deleteentry",{"_index":277,"title":{},"body":{"components/TodolistComponent.html":{}}}],["deleteentry(card",{"_index":286,"title":{},"body":{"components/TodolistComponent.html":{}}}],["deletetask",{"_index":85,"title":{},"body":{"injectables/CRUDService.html":{}}}],["deletetask(parent",{"_index":106,"title":{},"body":{"injectables/CRUDService.html":{}}}],["dependencies",{"_index":52,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":474,"title":{},"body":{"index.html":{}}}],["development",{"_index":469,"title":{},"body":{"index.html":{}}}],["directive",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/TodolistComponent.html":{}}}],["directives",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/TodolistComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":485,"title":{},"body":{"index.html":{}}}],["directory",{"_index":490,"title":{},"body":{"index.html":{}}}],["display",{"_index":336,"title":{},"body":{"components/TodolistComponent.html":{}}}],["dist",{"_index":489,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":428,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/TodolistComponent.html":{}}}],["done",{"_index":323,"title":{},"body":{"components/TodolistComponent.html":{}}}],["dotted",{"_index":375,"title":{},"body":{"components/TodolistComponent.html":{}}}],["dynamic",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":502,"title":{},"body":{"index.html":{}}}],["element",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDService.html":{},"components/TodolistComponent.html":{}}}],["element.id",{"_index":154,"title":{},"body":{"injectables/CRUDService.html":{}}}],["end",{"_index":501,"title":{},"body":{"index.html":{}}}],["enter",{"_index":318,"title":{},"body":{"components/TodolistComponent.html":{}}}],["entry",{"_index":434,"title":{"interfaces/entry.html":{}},"body":{"coverage.html":{},"interfaces/entry.html":{}}}],["entry.id",{"_index":200,"title":{},"body":{"injectables/CRUDService.html":{}}}],["entry.tasks.push(newtask",{"_index":201,"title":{},"body":{"injectables/CRUDService.html":{}}}],["environment",{"_index":442,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["execute",{"_index":498,"title":{},"body":{"index.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CRUDService.html":{},"classes/Card.html":{},"classes/Task.html":{},"components/TodolistComponent.html":{},"interfaces/entry.html":{}}}],["exports",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["false",{"_index":158,"title":{},"body":{"injectables/CRUDService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":340,"title":{},"body":{"components/TodolistComponent.html":{}}}],["fellow.isdone",{"_index":231,"title":{},"body":{"injectables/CRUDService.html":{}}}],["fellowsubtodos",{"_index":227,"title":{},"body":{"injectables/CRUDService.html":{}}}],["fellowsubtodos.every(fellow",{"_index":230,"title":{},"body":{"injectables/CRUDService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CRUDService.html":{},"classes/Card.html":{},"classes/Task.html":{},"components/TodolistComponent.html":{},"coverage.html":{},"interfaces/entry.html":{}}}],["files",{"_index":480,"title":{},"body":{"index.html":{}}}],["filter",{"_index":405,"title":{},"body":{"components/TodolistComponent.html":{}}}],["filteredchildren",{"_index":211,"title":{},"body":{"injectables/CRUDService.html":{}}}],["filteredchildren:task",{"_index":207,"title":{},"body":{"injectables/CRUDService.html":{}}}],["fixed",{"_index":412,"title":{},"body":{"components/TodolistComponent.html":{}}}],["flag",{"_index":492,"title":{},"body":{"index.html":{}}}],["float",{"_index":379,"title":{},"body":{"components/TodolistComponent.html":{}}}],["font",{"_index":339,"title":{},"body":{"components/TodolistComponent.html":{}}}],["foot",{"_index":371,"title":{},"body":{"components/TodolistComponent.html":{}}}],["formbuilder",{"_index":299,"title":{},"body":{"components/TodolistComponent.html":{}}}],["formcontrol",{"_index":296,"title":{},"body":{"components/TodolistComponent.html":{}}}],["formgroup",{"_index":295,"title":{},"body":{"components/TodolistComponent.html":{}}}],["formsmodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["further",{"_index":504,"title":{},"body":{"index.html":{}}}],["generate",{"_index":483,"title":{},"body":{"index.html":{}}}],["generated",{"_index":465,"title":{},"body":{"index.html":{}}}],["getting",{"_index":462,"title":{"index.html":{}},"body":{}}],["gettodos",{"_index":130,"title":{},"body":{"injectables/CRUDService.html":{}}}],["go",{"_index":507,"title":{},"body":{"index.html":{}}}],["gradient(90deg",{"_index":350,"title":{},"body":{"components/TodolistComponent.html":{}}}],["height",{"_index":409,"title":{},"body":{"components/TodolistComponent.html":{}}}],["help",{"_index":505,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":333,"title":{},"body":{"components/TodolistComponent.html":{}}}],["html",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/TodolistComponent.html":{}}}],["http://localhost:4200",{"_index":476,"title":{},"body":{"index.html":{}}}],["icon",{"_index":398,"title":{},"body":{"components/TodolistComponent.html":{}}}],["id",{"_index":105,"title":{},"body":{"injectables/CRUDService.html":{},"classes/Card.html":{},"classes/Task.html":{},"components/TodolistComponent.html":{}}}],["identifier",{"_index":429,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":269,"title":{},"body":{"components/TodolistComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CRUDService.html":{},"classes/Card.html":{},"components/TodolistComponent.html":{}}}],["important",{"_index":327,"title":{},"body":{"components/TodolistComponent.html":{}}}],["imports",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/CRUDService.html":{},"classes/Card.html":{},"classes/Task.html":{},"components/TodolistComponent.html":{},"interfaces/entry.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CRUDService.html":{},"classes/Card.html":{},"classes/Task.html":{},"components/TodolistComponent.html":{},"interfaces/entry.html":{}}}],["init",{"_index":86,"title":{},"body":{"injectables/CRUDService.html":{}}}],["injectable",{"_index":77,"title":{"injectables/CRUDService.html":{}},"body":{"injectables/CRUDService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":78,"title":{},"body":{"injectables/CRUDService.html":{}}}],["inline",{"_index":337,"title":{},"body":{"components/TodolistComponent.html":{}}}],["input[type=checkbox",{"_index":407,"title":{},"body":{"components/TodolistComponent.html":{}}}],["input[type=text",{"_index":420,"title":{},"body":{"components/TodolistComponent.html":{}}}],["interface",{"_index":433,"title":{"interfaces/entry.html":{}},"body":{"coverage.html":{},"interfaces/entry.html":{},"overview.html":{}}}],["interfaces",{"_index":461,"title":{},"body":{"interfaces/entry.html":{}}}],["invert",{"_index":406,"title":{},"body":{"components/TodolistComponent.html":{}}}],["isallchecked",{"_index":229,"title":{},"body":{"injectables/CRUDService.html":{}}}],["isallcheckedbefore",{"_index":167,"title":{},"body":{"injectables/CRUDService.html":{}}}],["isdone",{"_index":157,"title":{},"body":{"injectables/CRUDService.html":{},"classes/Card.html":{},"classes/Task.html":{},"interfaces/entry.html":{}}}],["isdone:boolean",{"_index":250,"title":{},"body":{"classes/Card.html":{}}}],["item",{"_index":383,"title":{},"body":{"components/TodolistComponent.html":{}}}],["json.parse(contents",{"_index":237,"title":{},"body":{"injectables/CRUDService.html":{}}}],["json.stringify(contents",{"_index":235,"title":{},"body":{"injectables/CRUDService.html":{}}}],["jsonpipe",{"_index":300,"title":{},"body":{"components/TodolistComponent.html":{}}}],["karma",{"_index":500,"title":{},"body":{"index.html":{}}}],["last",{"_index":153,"title":{},"body":{"injectables/CRUDService.html":{}}}],["legend",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/TodolistComponent.html":{},"overview.html":{}}}],["linear",{"_index":349,"title":{},"body":{"components/TodolistComponent.html":{}}}],["list",{"_index":118,"title":{},"body":{"injectables/CRUDService.html":{},"components/TodolistComponent.html":{}}}],["literal",{"_index":242,"title":{},"body":{"classes/Card.html":{},"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["localelement",{"_index":175,"title":{},"body":{"injectables/CRUDService.html":{}}}],["localelement.isdone",{"_index":178,"title":{},"body":{"injectables/CRUDService.html":{}}}],["map",{"_index":136,"title":{},"body":{"injectables/CRUDService.html":{}}}],["map((cards",{"_index":142,"title":{},"body":{"injectables/CRUDService.html":{}}}],["margin",{"_index":334,"title":{},"body":{"components/TodolistComponent.html":{}}}],["matching",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CRUDService.html":{},"classes/Card.html":{},"classes/Task.html":{},"components/TodolistComponent.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/entry.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxid",{"_index":150,"title":{},"body":{"injectables/CRUDService.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/TodolistComponent.html":{}}}],["methods",{"_index":81,"title":{},"body":{"injectables/CRUDService.html":{},"components/TodolistComponent.html":{}}}],["miscellaneous",{"_index":516,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["models/card.model",{"_index":134,"title":{},"body":{"injectables/CRUDService.html":{},"components/TodolistComponent.html":{}}}],["models/task.model",{"_index":135,"title":{},"body":{"injectables/CRUDService.html":{},"components/TodolistComponent.html":{}}}],["modifiedsubtodoparent",{"_index":115,"title":{},"body":{"injectables/CRUDService.html":{}}}],["modifiedsubtodoparent.id",{"_index":226,"title":{},"body":{"injectables/CRUDService.html":{}}}],["module",{"_index":49,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":51,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":506,"title":{},"body":{"index.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDService.html":{},"classes/Card.html":{},"classes/Task.html":{},"components/TodolistComponent.html":{},"index.html":{}}}],["navigate",{"_index":475,"title":{},"body":{"index.html":{}}}],["new",{"_index":128,"title":{},"body":{"injectables/CRUDService.html":{},"components/TodolistComponent.html":{},"coverage.html":{},"index.html":{}}}],["newdataset",{"_index":212,"title":{},"body":{"injectables/CRUDService.html":{}}}],["newdataset.push(parent",{"_index":215,"title":{},"body":{"injectables/CRUDService.html":{}}}],["newdataset.sort((a",{"_index":216,"title":{},"body":{"injectables/CRUDService.html":{}}}],["newentry",{"_index":155,"title":{},"body":{"injectables/CRUDService.html":{}}}],["newid",{"_index":198,"title":{},"body":{"injectables/CRUDService.html":{}}}],["newlist",{"_index":204,"title":{},"body":{"injectables/CRUDService.html":{}}}],["newparent",{"_index":187,"title":{},"body":{"injectables/CRUDService.html":{}}}],["newparent.isdone",{"_index":192,"title":{},"body":{"injectables/CRUDService.html":{}}}],["newparent.tasks.every(task",{"_index":191,"title":{},"body":{"injectables/CRUDService.html":{}}}],["ng",{"_index":472,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":278,"title":{},"body":{"components/TodolistComponent.html":{}}}],["none",{"_index":344,"title":{},"body":{"components/TodolistComponent.html":{}}}],["number",{"_index":95,"title":{},"body":{"injectables/CRUDService.html":{},"classes/Card.html":{},"classes/Task.html":{},"components/TodolistComponent.html":{}}}],["object",{"_index":120,"title":{},"body":{"injectables/CRUDService.html":{},"components/TodolistComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":132,"title":{},"body":{"injectables/CRUDService.html":{}}}],["oninit",{"_index":270,"title":{},"body":{"components/TodolistComponent.html":{}}}],["optional",{"_index":98,"title":{},"body":{"injectables/CRUDService.html":{},"classes/Card.html":{},"classes/Task.html":{},"components/TodolistComponent.html":{}}}],["originalelement.isdone",{"_index":174,"title":{},"body":{"injectables/CRUDService.html":{}}}],["originalelement.tasks.every(subtask",{"_index":168,"title":{},"body":{"injectables/CRUDService.html":{}}}],["originalelement.tasks.find(tasks",{"_index":171,"title":{},"body":{"injectables/CRUDService.html":{}}}],["originalelement:card",{"_index":163,"title":{},"body":{"injectables/CRUDService.html":{}}}],["originaltask",{"_index":170,"title":{},"body":{"injectables/CRUDService.html":{}}}],["originaltask.isdone",{"_index":173,"title":{},"body":{"injectables/CRUDService.html":{}}}],["out",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":332,"title":{},"body":{"components/TodolistComponent.html":{}}}],["overview",{"_index":509,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":357,"title":{},"body":{"components/TodolistComponent.html":{}}}],["package",{"_index":450,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":381,"title":{},"body":{"components/TodolistComponent.html":{}}}],["page",{"_index":511,"title":{},"body":{"index.html":{}}}],["panel",{"_index":390,"title":{},"body":{"components/TodolistComponent.html":{}}}],["parameters",{"_index":97,"title":{},"body":{"injectables/CRUDService.html":{},"classes/Card.html":{},"classes/Task.html":{},"components/TodolistComponent.html":{}}}],["parent",{"_index":110,"title":{},"body":{"injectables/CRUDService.html":{},"components/TodolistComponent.html":{}}}],["parent.id",{"_index":166,"title":{},"body":{"injectables/CRUDService.html":{}}}],["parent.tasks",{"_index":210,"title":{},"body":{"injectables/CRUDService.html":{}}}],["parent.tasks.filter(child",{"_index":208,"title":{},"body":{"injectables/CRUDService.html":{}}}],["parentid",{"_index":94,"title":{},"body":{"injectables/CRUDService.html":{},"components/TodolistComponent.html":{}}}],["parents.id",{"_index":214,"title":{},"body":{"injectables/CRUDService.html":{}}}],["position",{"_index":366,"title":{},"body":{"components/TodolistComponent.html":{}}}],["press",{"_index":317,"title":{},"body":{"components/TodolistComponent.html":{}}}],["private",{"_index":80,"title":{},"body":{"injectables/CRUDService.html":{}}}],["prod",{"_index":491,"title":{},"body":{"index.html":{}}}],["production",{"_index":493,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":464,"title":{},"body":{"index.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDService.html":{},"classes/Card.html":{},"classes/Task.html":{},"components/TodolistComponent.html":{},"interfaces/entry.html":{}}}],["protractor",{"_index":503,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":139,"title":{},"body":{"injectables/CRUDService.html":{}}}],["providers",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["radius",{"_index":345,"title":{},"body":{"components/TodolistComponent.html":{}}}],["reactiveformsmodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["recentelements",{"_index":162,"title":{},"body":{"injectables/CRUDService.html":{}}}],["recentelements.find(cardincontext",{"_index":176,"title":{},"body":{"injectables/CRUDService.html":{}}}],["recentelements.find(topleveltask",{"_index":164,"title":{},"body":{"injectables/CRUDService.html":{}}}],["reference",{"_index":185,"title":{},"body":{"injectables/CRUDService.html":{},"index.html":{}}}],["refreshchecklist",{"_index":87,"title":{},"body":{"injectables/CRUDService.html":{}}}],["refreshchecklist(modifiedsubtodoparent",{"_index":113,"title":{},"body":{"injectables/CRUDService.html":{}}}],["relative",{"_index":367,"title":{},"body":{"components/TodolistComponent.html":{}}}],["reload",{"_index":478,"title":{},"body":{"index.html":{}}}],["require",{"_index":447,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["result",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CRUDService.html":{},"classes/Card.html":{},"classes/Task.html":{},"components/TodolistComponent.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/entry.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CRUDService.html":{},"classes/Card.html":{},"classes/Task.html":{},"components/TodolistComponent.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/entry.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":140,"title":{},"body":{"injectables/CRUDService.html":{}}}],["returns",{"_index":99,"title":{},"body":{"injectables/CRUDService.html":{},"components/TodolistComponent.html":{}}}],["rgb(0",{"_index":422,"title":{},"body":{"components/TodolistComponent.html":{}}}],["rgb(2,117,216",{"_index":348,"title":{},"body":{"components/TodolistComponent.html":{}}}],["rgb(255",{"_index":330,"title":{},"body":{"components/TodolistComponent.html":{}}}],["rgba(0",{"_index":376,"title":{},"body":{"components/TodolistComponent.html":{}}}],["rgba(0,212,255,1",{"_index":354,"title":{},"body":{"components/TodolistComponent.html":{}}}],["rgba(128",{"_index":401,"title":{},"body":{"components/TodolistComponent.html":{}}}],["rgba(2,117,216,1",{"_index":351,"title":{},"body":{"components/TodolistComponent.html":{}}}],["rgba(91,192,222,1",{"_index":352,"title":{},"body":{"components/TodolistComponent.html":{}}}],["rgba(93,160,180,1",{"_index":391,"title":{},"body":{"components/TodolistComponent.html":{}}}],["rgba(95,113,116,1",{"_index":393,"title":{},"body":{"components/TodolistComponent.html":{}}}],["right",{"_index":380,"title":{},"body":{"components/TodolistComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDService.html":{}}}],["root'},{'name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/TodolistComponent.html":{}}}],["run",{"_index":471,"title":{},"body":{"index.html":{}}}],["running",{"_index":494,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":133,"title":{},"body":{"injectables/CRUDService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":138,"title":{},"body":{"injectables/CRUDService.html":{}}}],["sans",{"_index":341,"title":{},"body":{"components/TodolistComponent.html":{}}}],["save",{"_index":88,"title":{},"body":{"injectables/CRUDService.html":{}}}],["save(list",{"_index":116,"title":{},"body":{"injectables/CRUDService.html":{}}}],["savedelements",{"_index":186,"title":{},"body":{"injectables/CRUDService.html":{}}}],["savedelements.find(topleveltasks",{"_index":188,"title":{},"body":{"injectables/CRUDService.html":{}}}],["saving",{"_index":183,"title":{},"body":{"injectables/CRUDService.html":{}}}],["scaffolding",{"_index":482,"title":{},"body":{"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/TodolistComponent.html":{}}}],["serif",{"_index":342,"title":{},"body":{"components/TodolistComponent.html":{}}}],["serve",{"_index":473,"title":{},"body":{"index.html":{}}}],["server",{"_index":470,"title":{},"body":{"index.html":{}}}],["services/crud.service",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"components/TodolistComponent.html":{}}}],["set",{"_index":89,"title":{},"body":{"injectables/CRUDService.html":{}}}],["set(contents",{"_index":119,"title":{},"body":{"injectables/CRUDService.html":{}}}],["shadow",{"_index":396,"title":{},"body":{"components/TodolistComponent.html":{}}}],["size",{"_index":361,"title":{},"body":{"components/TodolistComponent.html":{}}}],["solid",{"_index":385,"title":{},"body":{"components/TodolistComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CRUDService.html":{},"classes/Card.html":{},"classes/Task.html":{},"components/TodolistComponent.html":{},"interfaces/entry.html":{},"index.html":{}}}],["spec\\.ts",{"_index":522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/interfaces/entry.interface.ts",{"_index":432,"title":{},"body":{"coverage.html":{},"interfaces/entry.html":{}}}],["src/app/models/card.model.ts",{"_index":239,"title":{},"body":{"classes/Card.html":{},"coverage.html":{}}}],["src/app/models/card.model.ts:4",{"_index":244,"title":{},"body":{"classes/Card.html":{}}}],["src/app/models/card.model.ts:5",{"_index":247,"title":{},"body":{"classes/Card.html":{}}}],["src/app/models/card.model.ts:6",{"_index":246,"title":{},"body":{"classes/Card.html":{}}}],["src/app/models/card.model.ts:7",{"_index":243,"title":{},"body":{"classes/Card.html":{}}}],["src/app/models/task.model.ts",{"_index":260,"title":{},"body":{"classes/Task.html":{},"coverage.html":{}}}],["src/app/models/task.model.ts:2",{"_index":263,"title":{},"body":{"classes/Task.html":{}}}],["src/app/models/task.model.ts:3",{"_index":264,"title":{},"body":{"classes/Task.html":{}}}],["src/app/models/task.model.ts:4",{"_index":262,"title":{},"body":{"classes/Task.html":{}}}],["src/app/services/crud.service.ts",{"_index":79,"title":{},"body":{"injectables/CRUDService.html":{},"coverage.html":{}}}],["src/app/services/crud.service.ts:109",{"_index":104,"title":{},"body":{"injectables/CRUDService.html":{}}}],["src/app/services/crud.service.ts:117",{"_index":109,"title":{},"body":{"injectables/CRUDService.html":{}}}],["src/app/services/crud.service.ts:128",{"_index":117,"title":{},"body":{"injectables/CRUDService.html":{}}}],["src/app/services/crud.service.ts:13",{"_index":129,"title":{},"body":{"injectables/CRUDService.html":{}}}],["src/app/services/crud.service.ts:133",{"_index":114,"title":{},"body":{"injectables/CRUDService.html":{}}}],["src/app/services/crud.service.ts:144",{"_index":121,"title":{},"body":{"injectables/CRUDService.html":{}}}],["src/app/services/crud.service.ts:148",{"_index":111,"title":{},"body":{"injectables/CRUDService.html":{}}}],["src/app/services/crud.service.ts:15",{"_index":131,"title":{},"body":{"injectables/CRUDService.html":{}}}],["src/app/services/crud.service.ts:23",{"_index":112,"title":{},"body":{"injectables/CRUDService.html":{}}}],["src/app/services/crud.service.ts:29",{"_index":102,"title":{},"body":{"injectables/CRUDService.html":{}}}],["src/app/services/crud.service.ts:53",{"_index":125,"title":{},"body":{"injectables/CRUDService.html":{}}}],["src/app/services/crud.service.ts:86",{"_index":96,"title":{},"body":{"injectables/CRUDService.html":{}}}],["src/app/todolist/todolist.component.ts",{"_index":268,"title":{},"body":{"components/TodolistComponent.html":{},"coverage.html":{}}}],["src/app/todolist/todolist.component.ts:15",{"_index":297,"title":{},"body":{"components/TodolistComponent.html":{}}}],["src/app/todolist/todolist.component.ts:19",{"_index":298,"title":{},"body":{"components/TodolistComponent.html":{}}}],["src/app/todolist/todolist.component.ts:23",{"_index":282,"title":{},"body":{"components/TodolistComponent.html":{}}}],["src/app/todolist/todolist.component.ts:32",{"_index":289,"title":{},"body":{"components/TodolistComponent.html":{}}}],["src/app/todolist/todolist.component.ts:36",{"_index":291,"title":{},"body":{"components/TodolistComponent.html":{}}}],["src/app/todolist/todolist.component.ts:42",{"_index":294,"title":{},"body":{"components/TodolistComponent.html":{}}}],["src/app/todolist/todolist.component.ts:50",{"_index":285,"title":{},"body":{"components/TodolistComponent.html":{}}}],["src/app/todolist/todolist.component.ts:55",{"_index":288,"title":{},"body":{"components/TodolistComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":440,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":444,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":445,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":463,"title":{"index.html":{}},"body":{}}],["statements",{"_index":430,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":410,"title":{},"body":{"components/TodolistComponent.html":{}}}],["store",{"_index":223,"title":{},"body":{"injectables/CRUDService.html":{}}}],["store.find(parent",{"_index":225,"title":{},"body":{"injectables/CRUDService.html":{}}}],["stored",{"_index":488,"title":{},"body":{"index.html":{}}}],["storedparent",{"_index":224,"title":{},"body":{"injectables/CRUDService.html":{}}}],["storedparent.isdone",{"_index":232,"title":{},"body":{"injectables/CRUDService.html":{}}}],["storedparent.tasks",{"_index":228,"title":{},"body":{"injectables/CRUDService.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDService.html":{},"classes/Card.html":{},"classes/Task.html":{},"interfaces/entry.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/TodolistComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/TodolistComponent.html":{}}}],["sub",{"_index":388,"title":{},"body":{"components/TodolistComponent.html":{}}}],["submit",{"_index":279,"title":{},"body":{"components/TodolistComponent.html":{}}}],["submit(data",{"_index":290,"title":{},"body":{"components/TodolistComponent.html":{}}}],["submittask",{"_index":280,"title":{},"body":{"components/TodolistComponent.html":{}}}],["submittask(taskname",{"_index":293,"title":{},"body":{"components/TodolistComponent.html":{}}}],["subtask.isdone",{"_index":169,"title":{},"body":{"injectables/CRUDService.html":{}}}],["subtodo",{"_index":382,"title":{},"body":{"components/TodolistComponent.html":{}}}],["support",{"_index":512,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":513,"title":{},"body":{"modules.html":{}}}],["table",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":137,"title":{},"body":{"injectables/CRUDService.html":{}}}],["targetlist",{"_index":148,"title":{},"body":{"injectables/CRUDService.html":{}}}],["targetlist.foreach(element",{"_index":152,"title":{},"body":{"injectables/CRUDService.html":{}}}],["targetlist.push(newentry",{"_index":160,"title":{},"body":{"injectables/CRUDService.html":{}}}],["task",{"_index":124,"title":{"classes/Task.html":{}},"body":{"injectables/CRUDService.html":{},"classes/Card.html":{},"classes/Task.html":{},"components/TodolistComponent.html":{},"coverage.html":{}}}],["task(task",{"_index":259,"title":{},"body":{"classes/Card.html":{}}}],["task.id",{"_index":265,"title":{},"body":{"classes/Task.html":{}}}],["task.isdone",{"_index":180,"title":{},"body":{"injectables/CRUDService.html":{},"classes/Task.html":{},"components/TodolistComponent.html":{}}}],["task.model",{"_index":248,"title":{},"body":{"classes/Card.html":{}}}],["task.name",{"_index":267,"title":{},"body":{"classes/Task.html":{}}}],["taskid",{"_index":287,"title":{},"body":{"components/TodolistComponent.html":{}}}],["taskname",{"_index":194,"title":{},"body":{"injectables/CRUDService.html":{},"components/TodolistComponent.html":{}}}],["taskname.taskname",{"_index":310,"title":{},"body":{"components/TodolistComponent.html":{}}}],["tasks",{"_index":159,"title":{},"body":{"injectables/CRUDService.html":{},"classes/Card.html":{}}}],["tasks.id",{"_index":172,"title":{},"body":{"injectables/CRUDService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/TodolistComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/TodolistComponent.html":{}}}],["test",{"_index":497,"title":{},"body":{"index.html":{}}}],["tests",{"_index":496,"title":{},"body":{"index.html":{}}}],["text",{"_index":363,"title":{},"body":{"components/TodolistComponent.html":{}}}],["this.allentries",{"_index":304,"title":{},"body":{"components/TodolistComponent.html":{}}}],["this.createform.reset",{"_index":308,"title":{},"body":{"components/TodolistComponent.html":{}}}],["this.createtask.reset",{"_index":312,"title":{},"body":{"components/TodolistComponent.html":{}}}],["this.crud.addtask(taskname",{"_index":311,"title":{},"body":{"components/TodolistComponent.html":{}}}],["this.crud.create(data.title",{"_index":307,"title":{},"body":{"components/TodolistComponent.html":{}}}],["this.crud.delete(id",{"_index":316,"title":{},"body":{"components/TodolistComponent.html":{}}}],["this.crud.deletetask(card",{"_index":315,"title":{},"body":{"components/TodolistComponent.html":{}}}],["this.crud.init",{"_index":306,"title":{},"body":{"components/TodolistComponent.html":{}}}],["this.crud.todos.subscribe(data",{"_index":303,"title":{},"body":{"components/TodolistComponent.html":{}}}],["this.crud.update(element",{"_index":314,"title":{},"body":{"components/TodolistComponent.html":{}}}],["this.get",{"_index":145,"title":{},"body":{"injectables/CRUDService.html":{}}}],["this.id",{"_index":251,"title":{},"body":{"classes/Card.html":{},"classes/Task.html":{}}}],["this.isdone",{"_index":255,"title":{},"body":{"classes/Card.html":{},"classes/Task.html":{}}}],["this.name",{"_index":266,"title":{},"body":{"classes/Task.html":{}}}],["this.ngoninit",{"_index":309,"title":{},"body":{"components/TodolistComponent.html":{}}}],["this.refreshchecklist(parent",{"_index":221,"title":{},"body":{"injectables/CRUDService.html":{}}}],["this.refreshchecklist(thisentry",{"_index":203,"title":{},"body":{"injectables/CRUDService.html":{}}}],["this.save(currentdata",{"_index":202,"title":{},"body":{"injectables/CRUDService.html":{}}}],["this.save(newdataset",{"_index":220,"title":{},"body":{"injectables/CRUDService.html":{}}}],["this.save(newlist",{"_index":206,"title":{},"body":{"injectables/CRUDService.html":{}}}],["this.save(recentelements",{"_index":182,"title":{},"body":{"injectables/CRUDService.html":{}}}],["this.save(savedelements",{"_index":193,"title":{},"body":{"injectables/CRUDService.html":{}}}],["this.save(store",{"_index":233,"title":{},"body":{"injectables/CRUDService.html":{}}}],["this.save(targetlist",{"_index":161,"title":{},"body":{"injectables/CRUDService.html":{}}}],["this.set(list",{"_index":222,"title":{},"body":{"injectables/CRUDService.html":{}}}],["this.tasks",{"_index":257,"title":{},"body":{"classes/Card.html":{}}}],["this.title",{"_index":253,"title":{},"body":{"classes/Card.html":{}}}],["this.todo$.getvalue",{"_index":149,"title":{},"body":{"injectables/CRUDService.html":{}}}],["this.todo$.next(this.get",{"_index":146,"title":{},"body":{"injectables/CRUDService.html":{}}}],["this.todo$.pipe",{"_index":141,"title":{},"body":{"injectables/CRUDService.html":{}}}],["thisentry.tasks.length",{"_index":199,"title":{},"body":{"injectables/CRUDService.html":{}}}],["thisentry:card",{"_index":196,"title":{},"body":{"injectables/CRUDService.html":{}}}],["times",{"_index":320,"title":{},"body":{"components/TodolistComponent.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDService.html":{},"classes/Card.html":{},"components/TodolistComponent.html":{},"interfaces/entry.html":{}}}],["title:string",{"_index":249,"title":{},"body":{"classes/Card.html":{}}}],["todo",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDService.html":{},"components/TodolistComponent.html":{},"index.html":{}}}],["todocard",{"_index":324,"title":{},"body":{"components/TodolistComponent.html":{}}}],["todolist",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/TodolistComponent.html":{}}}],["todolist.component.css",{"_index":271,"title":{},"body":{"components/TodolistComponent.html":{}}}],["todolist.component.html",{"_index":272,"title":{},"body":{"components/TodolistComponent.html":{}}}],["todolist/todolist.component",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["todolistcomponent",{"_index":42,"title":{"components/TodolistComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/TodolistComponent.html":{},"coverage.html":{},"overview.html":{}}}],["todos",{"_index":92,"title":{},"body":{"injectables/CRUDService.html":{}}}],["top",{"_index":355,"title":{},"body":{"components/TodolistComponent.html":{}}}],["topleveltask.id",{"_index":165,"title":{},"body":{"injectables/CRUDService.html":{}}}],["topleveltasks.id",{"_index":189,"title":{},"body":{"injectables/CRUDService.html":{}}}],["transform",{"_index":368,"title":{},"body":{"components/TodolistComponent.html":{}}}],["translate(0",{"_index":369,"title":{},"body":{"components/TodolistComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/TodolistComponent.html":{}}}],["true",{"_index":181,"title":{},"body":{"injectables/CRUDService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDService.html":{},"classes/Card.html":{},"classes/Task.html":{},"components/TodolistComponent.html":{},"coverage.html":{},"interfaces/entry.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":495,"title":{},"body":{"index.html":{}}}],["update",{"_index":90,"title":{},"body":{"injectables/CRUDService.html":{}}}],["update(element",{"_index":123,"title":{},"body":{"injectables/CRUDService.html":{}}}],["updated",{"_index":184,"title":{},"body":{"injectables/CRUDService.html":{}}}],["uppercase",{"_index":321,"title":{},"body":{"components/TodolistComponent.html":{}}}],["use",{"_index":484,"title":{},"body":{"index.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/CRUDService.html":{},"components/TodolistComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/TodolistComponent.html":{}}}],["variable",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":517,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":468,"title":{},"body":{"index.html":{}}}],["via",{"_index":499,"title":{},"body":{"index.html":{}}}],["void",{"_index":100,"title":{},"body":{"injectables/CRUDService.html":{},"components/TodolistComponent.html":{}}}],["weight",{"_index":358,"title":{},"body":{"components/TodolistComponent.html":{}}}],["white",{"_index":360,"title":{},"body":{"components/TodolistComponent.html":{}}}],["width",{"_index":325,"title":{},"body":{"components/TodolistComponent.html":{}}}],["window.localstorage.getitem('contents",{"_index":236,"title":{},"body":{"injectables/CRUDService.html":{}}}],["window.localstorage.setitem('contents",{"_index":234,"title":{},"body":{"injectables/CRUDService.html":{}}}],["x270d",{"_index":319,"title":{},"body":{"components/TodolistComponent.html":{}}}],["x{{task.name",{"_index":322,"title":{},"body":{"components/TodolistComponent.html":{}}}],["yes",{"_index":126,"title":{},"body":{"injectables/CRUDService.html":{},"components/TodolistComponent.html":{}}}],["z",{"_index":414,"title":{},"body":{"components/TodolistComponent.html":{}}}],["zone.js",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'todo'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'todo';\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TodolistComponent', 'selector': 'app-todolist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nTodolistComponent\n\nTodolistComponent\n\nAppModule -->\n\nTodolistComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCRUDService\n\nCRUDService\n\nAppModule -->\n\nCRUDService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            TodolistComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            CRUDService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { TodolistComponent } from './todolist/todolist.component';\nimport { CRUDService } from './services/crud.service'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodolistComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [CRUDService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CRUDService.html":{"url":"injectables/CRUDService.html","title":"injectable - CRUDService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CRUDService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/crud.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                todo$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTask\n                            \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                deleteTask\n                            \n                            \n                                    Private\n                                get\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                refreshChecklist\n                            \n                            \n                                    Private\n                                save\n                            \n                            \n                                    Private\n                                set\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    todos\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTask\n                        \n                        \n                    \n                \n            \n            \n                \naddTask(undefined, parentID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crud.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crud.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crud.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTask\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTask(parent: Card, childID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crud.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                Card\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crud.service.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crud.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            refreshChecklist\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshChecklist(modifiedSubtodoParent: Card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crud.service.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modifiedSubtodoParent\n                                    \n                                                Card\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(list: Card[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crud.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                Card[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            set\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    set(contents: object[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crud.service.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contents\n                                    \n                                            object[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(element: Task | Card, parent?: Card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crud.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            Task | Card\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parent\n                                    \n                                                Card\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            todo$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/crud.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        todos\n                    \n                \n\n                \n                    \n                        gettodos()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/crud.service.ts:15\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Card } from '../models/card.model';\nimport { Task } from '../models/task.model';\nimport { map, tap } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class CRUDService {\n\n    private todo$: BehaviorSubject = new BehaviorSubject([])\n\n    get todos(): Observable {\n        return this.todo$.pipe(\n            map((cards) => {\n                return cards.map(c => new Card(c))\n            })\n        )\n    }\n\n    init() {\n        if (this.get()) {\n            this.todo$.next(this.get());\n        }\n    }\n\n    create(value: string) {\n        const targetList: Card[] = this.todo$.getValue();\n        let maxId = 0;\n\n        targetList.forEach(element => { // get the last id\n            const id = element.id;\n            if (id > maxId) {\n                maxId = id;\n            }\n        })\n\n        const newEntry: Card = {\n            id: maxId + 1,\n            title: value,\n            isDone: false,\n            tasks: []\n        }\n\n        targetList.push(newEntry);\n\n        this.save(targetList);\n\n    }\n\n    update(element: Task | Card, parent?: Card) {\n        let recentElements: Card[] = this.todo$.getValue();\n        \n        if (parent) {\n            const originalElement:Card = recentElements.find(topLevelTask => topLevelTask.id === parent.id);\n            const isAllCheckedBefore = originalElement.tasks.every(subTask => subTask.isDone);\n            const originalTask = originalElement.tasks.find(tasks=> tasks.id === element.id);\n            originalTask.isDone = !originalTask.isDone;\n            \n            if (isAllCheckedBefore) {\n                originalElement.isDone = false;    \n            }\n\n        } else {\n            const localElement: Card = recentElements.find(cardInContext => cardInContext.id === element.id)\n            localElement.isDone = !localElement.isDone;\n            (localElement as Card).tasks.map(task => {\n                task.isDone = true;\n            });\n        }\n\n        this.save(recentElements);  // saving the object with the updated reference value\n\n        if (parent) {\n            let savedElements: Card[] = this.todo$.getValue();\n            const newParent: Card = savedElements.find(topLevelTasks => topLevelTasks.id === parent.id);\n            const checkIfEveryIsDone = newParent.tasks.every(task => task.isDone);\n            if (checkIfEveryIsDone) newParent.isDone = true;\n\n            this.save(savedElements);\n        }\n    }\n\n    addTask({ taskName }, parentID: number) {\n\n        const currentData: Card[] = this.todo$.getValue();\n        const thisEntry:Card = currentData.find(element => element.id === parentID);\n\n        const newId = thisEntry.tasks.length  {\n            if (entry.id === parentID) {\n                entry.tasks.push(newTask);\n            }\n        });\n\n        this.save(currentData);\n        this.refreshChecklist(thisEntry);\n    }\n\n    delete(id: number) {\n        if (id) {\n            const currentData: Card[] = this.todo$.getValue();\n            const newList = currentData.filter(element => element.id !== id);\n            this.save(newList);\n        }\n    }\n\n    deleteTask(parent: Card, childID: number) {\n        const filteredChildren:Task[] = parent.tasks.filter(child => child.id !== childID);\n        parent.tasks = filteredChildren;\n        const currentData: Card[] = this.todo$.getValue();\n        const newDataset = currentData.filter(parents => parents.id !== parent.id);\n        newDataset.push(parent);\n        newDataset.sort((a, b) => (a.id > b.id) ? 1 : ((b.id > a.id) ? -1 : 0));\n        this.save(newDataset);\n        this.refreshChecklist(parent);\n    }\n\n    private save(list: Card[]) {\n        this.set(list);\n        if (this.get()) this.todo$.next(this.get());\n    }\n\n    private refreshChecklist(modifiedSubtodoParent: Card) {\n        const store: Card[] = this.todo$.getValue();\n        if (modifiedSubtodoParent) {\n            const storedParent = store.find(parent => parent.id === modifiedSubtodoParent.id);\n            const fellowSubtodos = storedParent.tasks;\n            const isAllChecked = fellowSubtodos.every(fellow => fellow.isDone);\n            storedParent.isDone = isAllChecked;\n            this.save(store);\n        }\n    }\n\n    private set(contents: object[]) {\n        window.localStorage.setItem('contents', JSON.stringify(contents));\n    }\n\n    private get() {\n        const contents = window.localStorage.getItem('contents');\n        if (contents) {\n            return JSON.parse(contents);\n        } else {\n            return []\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Card.html":{"url":"classes/Card.html","title":"class - Card","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Card\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/card.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                isDone\n                            \n                            \n                                tasks\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(card: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/card.model.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/card.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/card.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/card.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/card.model.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Task} from './task.model';\n\nexport class Card{\n    id: number;\n    title: string;\n    isDone: boolean;\n    tasks: Task[];\n\n    constructor(card: {id: number, title:string, isDone:boolean, tasks: Task[]}){\n        this.id = card.id;\n        this.title = card.title,\n        this.isDone = card.isDone;\n        this.tasks = card.tasks.map(task=>new Task(task))\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/task.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                isDone\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(task: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/task.model.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        task\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/task.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/task.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/task.model.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Task{\n    id: number;\n    name: string;\n    isDone: boolean;\n\n    constructor(task: {id: number, name: string, isDone: boolean}){\n        this.id = task.id,\n        this.name = task.name,\n        this.isDone = task.isDone;\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodolistComponent.html":{"url":"components/TodolistComponent.html","title":"component - TodolistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TodolistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/todolist/todolist.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-todolist\n            \n\n            \n                styleUrls\n                ./todolist.component.css\n            \n\n\n\n            \n                templateUrl\n                ./todolist.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allEntries\n                            \n                            \n                                createForm\n                            \n                            \n                                createTask\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkboxStatusChange\n                            \n                            \n                                deleteEntry\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                            \n                                submitTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(CRUD: CRUDService)\n                    \n                \n                        \n                            \n                                Defined in src/app/todolist/todolist.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        CRUD\n                                                  \n                                                        \n                                                                        CRUDService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkboxStatusChange\n                        \n                        \n                    \n                \n            \n            \n                \ncheckboxStatusChange(element: Card | Task, parent?: Card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todolist/todolist.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            Card | Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parent\n                                    \n                                                Card\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteEntry\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteEntry(card: Card | Task, taskId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todolist/todolist.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                            Card | Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todolist/todolist.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todolist/todolist.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitTask\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitTask(taskName, parentID)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todolist/todolist.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allEntries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Object[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/todolist/todolist.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    title: new FormControl('')\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/todolist/todolist.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createTask\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    taskName: new FormControl('')\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/todolist/todolist.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CRUDService } from '../services/crud.service';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { JsonPipe } from '@angular/common';\nimport { Task } from '../models/task.model';\nimport { Card } from '../models/card.model';\n\n@Component({\n  selector: 'app-todolist',\n  templateUrl: './todolist.component.html',\n  styleUrls: ['./todolist.component.css']\n})\nexport class TodolistComponent implements OnInit {\n\n  createForm = new FormGroup({\n    title: new FormControl('')\n  });\n\n  createTask = new FormGroup({\n    taskName: new FormControl('')\n  });\n\n  allEntries: Object[] = [];\n\n  constructor(private CRUD: CRUDService) {\n    this.CRUD.todos.subscribe(data => {\n      this.allEntries = data;\n      //console.log(data);\n    })\n  }\n\n  ngOnInit(): void {\n    this.CRUD.init();\n  }\n\n  submit(data) {\n    this.CRUD.create(data.title);\n    this.createForm.reset()\n    //this.ngOnInit();\n  }\n\n  submitTask(taskName, parentID) {\n    if (taskName && parentID) {\n      const name = taskName.taskName;\n      this.CRUD.addTask(taskName, parentID);\n      this.createTask.reset();\n    }\n  }\n\n  checkboxStatusChange(element: Card | Task, parent?: Card) {\n    //console.log(element, parent);\n    this.CRUD.update(element, parent);\n  }\n\n  deleteEntry(card: Card | Task, taskId?: number) {\n    if (taskId) {\n      this.CRUD.deleteTask(card as Card, taskId);\n    } else {\n      const id = card.id;\n      this.CRUD.delete(id);\n    }\n  }\n\n}\n\n\n    \n\n    \n        \n    \n        type a name for new todo, and press enter &#x270D;\n        \n    \n\n\n\n    \n        \n            &times;\n            {{card.title | uppercase}}\n        \n        \n            \n                \n                    x{{task.name}}\n                    \n                        {{task.isDone ? 'Done' : 'To do'}}\n                        \n                    \n                \n            \n            \n                \n                    \n                \n            \n        \n        \n            {{card.isDone ? 'Done' : 'To do'}}\n        \n    \n\n\n    \n\n    \n                \n                    ./todolist.component.css\n                \n                .todocard{\n    width: 98% !important;\n    background-color: rgb(255, 255, 255);\n    overflow: hidden;\n    margin: 10px;\n    display: inline-block;\n    font-family: sans-serif;\n    border: none;\n    border-radius: 5px;\n}\n.todocard-title{\n    width: 100%;\n    background: rgb(2,117,216);\n    background: linear-gradient(90deg, rgba(2,117,216,1) 0%, rgba(91,192,222,1) 20%, rgba(0,212,255,1) 100%);\n    margin-top: 0px;\n}\n\n.todocard-title > p {\n    margin: 0px;\n    font-weight: bolder;\n    color: white;\n}\n\n.todo-title{\n    font-size: 1.2rem;\n    text-align: center;\n    position: relative;\n    transform: translate(0%, -50%);\n}\n\n.todocard-foot{\n    margin-top: 20px;\n    font-size: 1.2rem;\n}\n.todocard-body{\n    font-size: 1.2rem;\n    border: 3px dotted rgba(0, 0, 0, 0.353);\n    width: 80%;\n    float: right;\n    margin: 5px;\n    border-radius: 20px; \n    padding: 5px;\n}\n.subtodo-item{\n    font-family: sans-serif;\n    font-size: 1.2rem;\n    border: 1px solid rgba(0, 0, 0, 0.465);\n    border-radius: 20px;\n    padding: 5px;\n    margin: 5px 2px;\n}\n.sub-checkbox{\n    float: right;\n}\n.todo-list-panel{\n    background: rgb(2,117,216);\n    background: linear-gradient(90deg, rgba(2,117,216,1) 0%, rgba(91,192,222,1) 20%, rgba(93,160,180,1) 39%, rgba(95,113,116,1) 100%);\n    padding: 3px;\n    border: none;\n    border-radius: 20px;\n}\n.todo-close{\n    text-align: right;\n    padding: 5px;\n    font-size: 1.5rem;\n    color: white;\n    text-shadow: black 1px 2px;\n}\n\n.icon-close{\n    border: 1px solid #d9534f;\n    border-radius: 20px;\n    background: #d9534f;\n    box-shadow: rgba(128, 128, 128, 0.472) 1px 3px;\n}\n\n.icon-close:hover{\n    filter: invert();\n}\n\ninput[type=checkbox]{\n    width: 15px;\n    height: 15px;\n}\n\n.checkbox-status{\n    margin: 3px 3px 3px 3px;\n}\n\n.element-adder{\n    width: 100%;\n    position: fixed;\n    bottom: 0px;\n    z-index: 9999 !important;\n}\n\n.add-control-panel{\n    background-color: #5bc0de;\n    width: 100%;\n    padding: 10px;\n    font-family: sans-serif;\n    color: white;\n    font-size: 1.3rem;\n    display: block;\n}\n\ninput[type=text]{\n    font-size: 1.8rem;\n    border: none;\n    border-radius: 20px;\n    width: 50%;\n}\n\n.color-done{\n    color: rgb(0, 204, 0);\n}\n.cards-container{\n    margin-bottom: 10% !important;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            type a name for new todo, and press enter ✍                                    ×            {{card.title | uppercase}}                                                                x{{task.name}}                                            {{task.isDone ? \\'Done\\' : \\'To do\\'}}                                                                                                                                                                                {{card.isDone ? \\'Done\\' : \\'To do\\'}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TodolistComponent', 'selector': 'app-todolist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TodolistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/entry.interface.ts\n            \n            interface\n            entry\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/card.model.ts\n            \n            class\n            Card\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/task.model.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/crud.service.ts\n            \n            injectable\n            CRUDService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/todolist/todolist.component.ts\n            \n            component\n            TodolistComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.4\n        \n            @angular/common : ~11.0.4\n        \n            @angular/compiler : ~11.0.4\n        \n            @angular/core : ~11.0.4\n        \n            @angular/forms : ~11.0.4\n        \n            @angular/platform-browser : ~11.0.4\n        \n            @angular/platform-browser-dynamic : ~11.0.4\n        \n            @angular/router : ~11.0.4\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/entry.html":{"url":"interfaces/entry.html","title":"interface - entry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  entry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/entry.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isDone\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isDone\n                                    \n                                \n                                \n                                    \n                                        isDone:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface entry{\n    title: string,\n    isDone: boolean\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTodo\n\n\n\n\n\n\nThis project was generated with Angular CLI version 11.0.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nTodolistComponent\n\nTodolistComponent\n\nAppModule -->\n\nTodolistComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCRUDService\n\nCRUDService\n\nAppModule -->\n\nCRUDService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
